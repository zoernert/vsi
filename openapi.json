{
  "openapi": "3.0.3",
  "info": {
    "title": "VSI Vector Store Service",
    "description": "Qdrant-compatible vector store with document upload and processing capabilities. Provides both a web UI and REST API for managing vector collections, uploading documents, and performing semantic search.",
    "version": "1.0.0",
    "contact": {
      "name": "VSI Vector Store Service"
    },
    "license": {
      "name": "ISC"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Collections",
      "description": "Vector collection management"
    },
    {
      "name": "Documents",
      "description": "Document upload, indexing, and management"
    },
    {
      "name": "Files",
      "description": "File download and information (no authentication required)"
    },
    {
      "name": "Search",
      "description": "Semantic search and retrieval"
    },
    {
      "name": "Qdrant Compatible",
      "description": "Direct Qdrant API compatibility"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    },
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "john_doe"
                  },
                  "password": {
                    "type": "string",
                    "example": "secure_password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - User already exists or invalid input"
          },
          "403": {
            "description": "Self-registration is disabled"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "john_doe"
                  },
                  "password": {
                    "type": "string",
                    "example": "secure_password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "isAdmin": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/collections": {
      "get": {
        "tags": ["Collections"],
        "summary": "List all collections",
        "responses": {
          "200": {
            "description": "List of collections",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "my_documents"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/collections/{name}": {
      "put": {
        "tags": ["Collections"],
        "summary": "Create a new collection",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "my_documents"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vectors": {
                    "type": "object",
                    "properties": {
                      "size": {
                        "type": "integer",
                        "example": 768
                      },
                      "distance": {
                        "type": "string",
                        "enum": ["Cosine", "Euclidean", "Dot"],
                        "example": "Cosine"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Collection created successfully"
          }
        }
      },
      "get": {
        "tags": ["Collections"],
        "summary": "Get collection information",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "my_documents"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection information"
          }
        }
      },
      "delete": {
        "tags": ["Collections"],
        "summary": "Delete a collection",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "my_documents"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection deleted successfully"
          }
        }
      }
    },
    "/api/collections/{collection}/upload": {
      "post": {
        "tags": ["Documents"],
        "summary": "Upload and index a file",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "my_documents"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded and indexed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "documentId": {
                      "type": "string",
                      "description": "Document ID in the vector store"
                    },
                    "fileUuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "UUID for file download"
                    },
                    "filename": {
                      "type": "string"
                    },
                    "downloadUrl": {
                      "type": "string",
                      "example": "/api/files/550e8400-e29b-41d4-a716-446655440000"
                    },
                    "fileInfoUrl": {
                      "type": "string",
                      "example": "/api/files/550e8400-e29b-41d4-a716-446655440000/info"
                    },
                    "collectionCreated": {
                      "type": "boolean",
                      "description": "Whether the collection was auto-created"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/collections/{collection}/create-text": {
      "post": {
        "tags": ["Documents"],
        "summary": "Create and index a text document",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "my_documents"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title", "content"],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Meeting Notes"
                  },
                  "content": {
                    "type": "string",
                    "example": "Today we discussed the new product features..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Text document created and indexed successfully"
          }
        }
      }
    },
    "/api/collections/{collection}/search": {
      "post": {
        "tags": ["Search"],
        "summary": "Semantic search in collection",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "my_documents"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["query"],
                "properties": {
                  "query": {
                    "type": "string",
                    "example": "machine learning algorithms"
                  },
                  "limit": {
                    "type": "integer",
                    "default": 10,
                    "example": 20
                  },
                  "filter": {
                    "type": "object",
                    "description": "Qdrant filter object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "string"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "score": {
                            "type": "number"
                          },
                          "payload": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/collections/{collection}/documents": {
      "get": {
        "tags": ["Documents"],
        "summary": "List documents in collection",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of documents"
          }
        }
      }
    },
    "/api/collections/{collection}/documents/{id}": {
      "get": {
        "tags": ["Documents"],
        "summary": "Get document by ID",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document details"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "tags": ["Documents"],
        "summary": "Delete document by ID",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document deleted successfully"
          }
        }
      }
    },
    "/api/files/{fileId}": {
      "get": {
        "tags": ["Files"],
        "summary": "Download file by UUID",
        "description": "Download an uploaded file using its UUID. No authentication required.",
        "security": [],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "550e8400-e29b-41d4-a716-446655440000",
            "description": "UUID of the file to download"
          }
        ],
        "responses": {
          "200": {
            "description": "File content",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Disposition": {
                "schema": {
                  "type": "string"
                },
                "description": "Attachment filename"
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                },
                "description": "File size in bytes"
              }
            }
          },
          "400": {
            "description": "Invalid file ID format"
          },
          "404": {
            "description": "File not found"
          }
        }
      }
    },
    "/api/files/{fileId}/info": {
      "get": {
        "tags": ["Files"],
        "summary": "Get file information by UUID",
        "description": "Get metadata about an uploaded file using its UUID. No authentication required.",
        "security": [],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "550e8400-e29b-41d4-a716-446655440000"
          }
        ],
        "responses": {
          "200": {
            "description": "File information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fileId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "fileName": {
                      "type": "string",
                      "example": "550e8400-e29b-41d4-a716-446655440000.txt"
                    },
                    "size": {
                      "type": "integer",
                      "example": 1024
                    },
                    "uploadedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modifiedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "extension": {
                      "type": "string",
                      "example": ".txt"
                    },
                    "downloadUrl": {
                      "type": "string",
                      "example": "/api/files/550e8400-e29b-41d4-a716-446655440000"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid file ID format"
          },
          "404": {
            "description": "File not found"
          }
        }
      }
    },
    "/collections/{collection}/points/search": {
      "post": {
        "tags": ["Qdrant Compatible"],
        "summary": "Qdrant-compatible vector search",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["vector"],
                "properties": {
                  "vector": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "example": [0.1, 0.2, 0.3]
                  },
                  "limit": {
                    "type": "integer",
                    "default": 10
                  },
                  "with_payload": {
                    "type": "boolean",
                    "default": true
                  },
                  "with_vector": {
                    "type": "boolean",
                    "default": false
                  },
                  "filter": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results in Qdrant format"
          }
        }
      }
    },
    "/collections/{collection}/points": {
      "put": {
        "tags": ["Qdrant Compatible"],
        "summary": "Upsert points (Qdrant compatible)",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "points": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "vector": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "payload": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Points upserted successfully"
          }
        }
      },
      "post": {
        "tags": ["Qdrant Compatible"],
        "summary": "Get points by IDs (Qdrant compatible)",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "with_payload": {
                    "type": "boolean",
                    "default": true
                  },
                  "with_vector": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retrieved points"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "api-key"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  }
}
